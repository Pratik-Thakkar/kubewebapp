apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app.kubernetes.io/name: kubewebapp
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.image.tag }}
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: webapp
    app.kubernetes.io/managed-by: helm
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kubewebapp
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubewebapp
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000
          env:
          - name: DB_HOST
            value: {{ .Release.Name }}-mysql
          - name: DB_USER
            value: {{ .Values.mysql.mysqlUser }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kubewebapp-db-pass
                key: mysql-password
          - name: DB_DATABASE
            value: {{ .Values.mysql.mysqlDatabase }}
