# This workflow will build and push a new container image to Amazon ECR.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.
#
#
# 2. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: Publish image to ECR

on:
  pull_request:
    branches: 
      - main
    types: [closed]

permissions:
  contents: read

env:
  AWS_REGION: us-east-1                                           # set this to your preferred AWS region, e.g. us-west-1
  ECR_REGISTRY: public.ecr.aws/i0j7o1s5                           # set this to your Amazon ECR registry
  ECR_REPOSITORY: ptdev-webapp                                    # set this to your Amazon ECR repository name
  IMAGE_TAG: 1.0.0                                                # set image tag

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    environment: dev

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Configure AWS CLI to get access to state file
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Authentication for ECR
    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

    # Build and Publish image
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} webapp/
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        echo "::set-output name=image::${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"